3) Full App Flow Chart
scss
Copy
Edit
(User logs in / signs up)
       ↓
(React sends request to Express backend)
       ↓
(Express handles auth, verifies JWT tokens)
       ↓
(User dashboard: daily bug reports listed)
       ↓
(User writes a new "Bug Journal Entry")
       ↓
(POST request to Express API)
       ↓
(Express validates, processes and saves it via Prisma ORM)
       ↓
(Stored in Neon PostgreSQL database)
       ↓
(React fetches updated list and renders UI)
       ↓
(Optional) AI Service Enhancements: Summarize / Suggest Fixes
🏛️ (4) Folder Structure
Backend (/server)
bash
Copy
Edit
/server
├── src
│   ├── config/            # Environment configs (DB URL, JWT secret)
│   ├── controllers/       # Request handlers (business logic)
│   ├── routes/            # All Express routes
│   ├── middlewares/       # Auth, error handling, validation
│   ├── services/          # DB operations via Prisma
│   ├── utils/             # Helper functions (token generation, validators)
│   ├── prisma/            # Prisma schema and generated client
│   ├── app.ts             # Main Express app setup
│   └── server.ts          # Entry point (start server)
├── .env                   # Environment variables
├── package.json           
├── tsconfig.json          # TypeScript config
└── README.md
Frontend (/client)
bash
Copy
Edit
/client
├── public/                # Static files
├── src/
│   ├── assets/            # Images, icons
│   ├── components/        # Reusable UI components
│   ├── pages/             # Main pages (Login, Dashboard, JournalEntry)
│   ├── services/          # API calls (Axios/Fetch functions)
│   ├── hooks/             # Custom hooks (useAuth, useFetch)
│   ├── context/           # Global Context Providers (AuthContext)
│   ├── utils/             # Utility functions (formatting dates etc.)
│   ├── styles/            # Tailwind or global CSS (if needed)
│   ├── App.tsx            # Main App component
│   ├── main.tsx           # ReactDOM rendering
│   └── router.tsx         # Routes configuration (using react-router)
├── tailwind.config.js     # Tailwind CSS config
├── postcss.config.js      # PostCSS config
├── package.json           
├── tsconfig.json          # TypeScript config
└── README.md